#!/usr/bin/env python3
"""Entry point for the Streamlit app."""
import datetime
from zoneinfo import ZoneInfo

import pandas as pd
import streamlit as st

from blackout_stats.data_access import read_blackout_events_from_google_sheet
from blackout_stats.formatting import format_human_readable_summary_stats_df
from blackout_stats.formatting import format_last_n_blackouts_df
from blackout_stats.stats import compute_rolling_statistics
from blackout_stats.stats import compute_summary_statistics
from blackout_stats.stats import transform_events_to_daily_records
from blackout_stats.visualization import generate_year_calendar_heatmap_plot


def main() -> None:
    location_name = st.secrets["location_name"]
    target_tzinfo = ZoneInfo(st.secrets["target_timezone_name"])

    st.set_page_config(page_title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å: {location_name}")
    st.title("üí° –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å")
    st.subheader(location_name)

    # Download the power outage data.
    df_blackout_events = read_blackout_events_from_google_sheet(
        gcp_service_account_info=st.secrets["gcp_service_account"].to_dict(),
        sheet_url=st.secrets["private_gsheets_url"],
    )
    df_daily_downtime = transform_events_to_daily_records(
        df_blackout_events=df_blackout_events,
        target_tzinfo=target_tzinfo,
    )
    last_update_date = df_blackout_events["end_date"].max()

    st.write("–î–∞–Ω—ñ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—é—Ç—å —Ñ–∞–∫—Ç–∏—á–Ω—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è.")
    st.write("–î–∞–Ω—ñ –º–æ–∂—É—Ç—å –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏—Å—è –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é —Ç–∞ –Ω–µ –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –Ω–µ–¥–∞–≤–Ω—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è.")
    st.write(f"–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö: {last_update_date:%Y-%m-%d %H:%M}.")

    available_years = [2022, 2023, 2024, 2025]
    year_selector = st.selectbox(
        label="–û–±–µ—Ä—ñ—Ç—å —Ä—ñ–∫",
        placeholder="–û–±–µ—Ä—ñ—Ç—å —Ä—ñ–∫",
        options=available_years,
        index=len(available_years) - 1,
    )
    is_current_year_selected = (year_selector == datetime.datetime.now().year == year_selector)

    # Filter the outage data to the currently selected year.
    df_blackout_events = pd.DataFrame(
        df_blackout_events[df_blackout_events["start_date"].dt.year == year_selector]
    )
    df_daily_downtime = pd.DataFrame(
        df_daily_downtime[df_daily_downtime["date"].dt.year == year_selector]
    )

    summary_stats = compute_summary_statistics(df_daily_downtime)

    st.header("üìä –°–∫—ñ–ª—å–∫–∏ —á–∞—Å—É –Ω–µ –±—É–ª–æ —Å–≤—ñ—Ç–ª–∞")
    df_summary_stats = format_human_readable_summary_stats_df(
        summary_stats=summary_stats,
        include_recent_n_days_stats=is_current_year_selected,
    )
    st.dataframe(
        data=df_summary_stats,
        column_config={
            "–ó–Ω–∞—á–µ–Ω–Ω—è": st.column_config.NumberColumn(format="%.1f"),
        },
        hide_index=True,
    )

    st.header("üóìÔ∏è –ö–∞–ª–µ–Ω–¥–∞—Ä —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å")
    st.caption("(–≥–æ–¥–∏–Ω –∑–∞ –¥–æ–±—É)")
    plot = generate_year_calendar_heatmap_plot(df_daily_downtime)
    st.bokeh_chart(plot)

    st.header("üìà –°–µ—Ä–µ–¥–Ω—å–æ—Ç–∏–∂–Ω–µ–≤–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –≤—ñ–¥–∫–ª—é—á–µ–Ω—å")
    st.caption("(–≥–æ–¥–∏–Ω –∑–∞ –¥–æ–±—É)")
    df_rolling_stats = compute_rolling_statistics(df_daily_downtime)
    st.line_chart(df_rolling_stats)

    st.header("‚è±Ô∏è –û—Å—Ç–∞–Ω–Ω—ñ 5 –≤—ñ–¥–∫–ª—é—á–µ–Ω—å")
    df_last_5_blackouts = format_last_n_blackouts_df(df_blackout_events, year=year_selector, n=5)
    st.dataframe(df_last_5_blackouts)


if __name__ == "__main__":
    main()
